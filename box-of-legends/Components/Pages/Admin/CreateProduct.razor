@page "/admin/products/create"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using box_of_legends.Data
@using box_of_legends.Models
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<div class="container mt-4">
    <a class="mb-4" href="/admin">Back</a>
    <h3>Create Product</h3>
    @if (isLoading)
    {
        <p>Loading...</p>
    }
    else if (product != null && champions != null)
    {
        <EditForm Model="@product" OnValidSubmit="HandleValidSubmit" FormName="createProductForm">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="name">Name</label>
                <InputText id="name" class="form-control" @bind-Value="product.Name" />
            </div>

            <div class="form-group">
                <label for="description">Description</label>
                <InputTextArea id="description" class="form-control" @bind-Value="product.Description" />
            </div>

            <div class="form-group">
                <label for="price">Price</label>
                <InputNumber id="price" class="form-control" @bind-Value="product.Price" />
            </div>

            <div class="form-group">
                <label for="smallImage">Small Image URL</label>
                <InputText id="smallImage" class="form-control" @bind-Value="product.SmallImage" />
            </div>

            <div class="form-group">
                <label for="largeImage">Large Image URL</label>
                <InputText id="largeImage" class="form-control" @bind-Value="product.LargeImage" />
            </div>

            <div class="form-group">
                <label for="champion">Champion</label>
                <InputSelect id="champion" class="form-control" @bind-Value="product.Champion.Id">
                    @foreach (var champion in champions)
                    {
                        <option value="@champion.Id">@champion.Name</option>
                    }
                </InputSelect>
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    }
    else
    {
        <p>Error loading data.</p>
    }
</div>


@code {
    private Product? product;
    private List<Champion>? champions;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            using var context = DbFactory.CreateDbContext();
            champions = await context.Champion.ToListAsync();
            if (champions == null || !champions.Any())
            {
                throw new Exception("No champions found in the database.");
            }

            product = new Product
                {
                    Name = string.Empty,
                    Description = string.Empty,
                    Price = 0,
                    SmallImage = string.Empty,
                    LargeImage = string.Empty,
                    Champion = champions.First()
                };
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            using var context = DbFactory.CreateDbContext();
            context.Product.Add(product!);
            await context.SaveChangesAsync();
            NavigationManager.NavigateTo("/admin");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving product: {ex.Message}");
            if (ex.InnerException != null)
            {
                Console.WriteLine($"Inner Exception: {ex.InnerException.Message}");
            }
        }
    }
}
}
